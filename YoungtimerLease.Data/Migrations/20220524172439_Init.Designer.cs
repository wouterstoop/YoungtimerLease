// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoungtimerLease.Data;

#nullable disable

namespace YoungtimerLease.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220524172439_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YoungtimerLease.Domain.Model.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Acceleration0To100")
                        .HasColumnType("float");

                    b.Property<bool?>("AutomaticTransmission")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CatalogValue")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ConstructionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CylinderCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Doors")
                        .HasColumnType("int");

                    b.Property<double?>("DynamicPowerKw")
                        .HasColumnType("float");

                    b.Property<decimal?>("FiscalValue")
                        .HasColumnType("money");

                    b.Property<Guid?>("FuelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfCilinders")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfGears")
                        .HasColumnType("int");

                    b.Property<bool>("Reserved")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowOnline")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.ToTable("Auto's", (string)null);
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.CarLeaseTariff", b =>
                {
                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeasePeriodKilometerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("LeaseMonthPrice")
                        .HasColumnType("smallmoney");

                    b.HasKey("CarId", "LeasePeriodKilometerId");

                    b.HasIndex("LeasePeriodKilometerId");

                    b.ToTable("Leasetarieven", (string)null);
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.Fuel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brandstoffen", (string)null);
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.LeasePeriodKilometer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KilometersPerYear")
                        .HasColumnType("int");

                    b.Property<int>("LeasePeriodMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("KilometersPerYear", "LeasePeriodMonths");

                    b.ToTable("LeasePeriodesKilometers", (string)null);
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.Car", b =>
                {
                    b.HasOne("YoungtimerLease.Domain.Model.Fuel", "Fuel")
                        .WithMany()
                        .HasForeignKey("FuelId");

                    b.Navigation("Fuel");
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.CarLeaseTariff", b =>
                {
                    b.HasOne("YoungtimerLease.Domain.Model.Car", null)
                        .WithMany("CarLeaseTariffs")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YoungtimerLease.Domain.Model.LeasePeriodKilometer", null)
                        .WithMany()
                        .HasForeignKey("LeasePeriodKilometerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YoungtimerLease.Domain.Model.Car", b =>
                {
                    b.Navigation("CarLeaseTariffs");
                });
#pragma warning restore 612, 618
        }
    }
}
